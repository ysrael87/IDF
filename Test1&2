
package com.test;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.testng.Assert;
import org.testng.annotations.AfterSuite;
import org.testng.annotations.BeforeSuite;
import org.testng.annotations.Test;
import org.testng.log4testng.Logger;

import java.text.SimpleDateFormat;
import java.util.Calendar;

/*
 * Created by zen on 1/17/16.
 */
public class BasicTest {
    public WebDriver driver = new FirefoxDriver();
    /* Get actual class name to be printed on */
    static Logger log = Logger.getLogger(BasicTest.class);

        @BeforeSuite

        public void initDriver() throws Exception{
            System.out.println("you are testing in Firefox");
            log.info("FirefoxDriver works");

        }


    @Test
    public void goToSite(){
            driver.navigate().to("https://devuser:pass1234@master.information-architecture.org");
            driver.findElement(By.xpath("/html/body/div[1]/main/header/div[3]/div/nav/div[2]/div/ul/li[2]/a")).click();

            String professionalPricedDiver = driver.findElement(By.xpath("html/body/div[1]/div/div/div[2]/div/div[1]/table/thead/tr/th[3]/div/div/div[1]")).getText();
            System.out.println(professionalPricedDiver + " Is the dollar amount");
            String expectedProfessionalPriceDriver = "$13";
            Assert.assertEquals(professionalPricedDiver, expectedProfessionalPriceDriver, "");

            //inspecting prof
            String actualBenefit1 = driver.findElement(By.xpath("html/body/div[1]/div/div/div[2]/div/div[1]/table/tbody/tr[1]/td[1]/div/a[1]/span")).getText();
            String  expectedBenefit1= "Take unlimited number of courses for free";
            Assert.assertEquals(actualBenefit1, expectedBenefit1);

            String actualBenefit2 = driver.findElement(By.xpath("html/body/div[1]/div/div/div[2]/div/div[1]/table/tbody/tr[2]/td[1]/div/a[1]/span")).getText();
            String  expectedBenefit2= "Course Certificates";
            Assert.assertEquals(actualBenefit2, expectedBenefit2);

            String actualBenefit3 = driver.findElement(By.xpath("html/body/div[1]/div/div/div[2]/div/div[1]/table/tbody/tr[3]/td[1]/div/a[1]/span")).getText();
            String  expectedBenefit3= "Local meetings for Learning and Networking";
            Assert.assertEquals(actualBenefit3, expectedBenefit3);

        String actualBenefit4 = driver.findElement(By.xpath("html/body/div[1]/div/div/div[2]/div/div[1]/table/tbody/tr[4]/td[1]/div/a[1]/span")).getText();
        String  expectedBenefit4 = "Premium Literature on UX";
        Assert.assertEquals(actualBenefit4, expectedBenefit4);

        String actualBenefit5 = driver.findElement(By.xpath("html/body/div[1]/div/div/div[2]/div/div[1]/table/tbody/tr[5]/td[1]/div/a[1]/span")).getText();
        String  expectedBenefit5 = "Career help and jobs";
        Assert.assertEquals(actualBenefit5, expectedBenefit5);

        String actualBenefit6 = driver.findElement(By.xpath("html/body/div[1]/div/div/div[2]/div/div[1]/table/tbody/tr[6]/td[1]/div/a[1]/span")).getText();
        String  expectedBenefit6 = "Lifetime IDF email and profile page";
        Assert.assertEquals(actualBenefit6, expectedBenefit6);

        String actualBenefit7 = driver.findElement(By.xpath("html/body/div[1]/div/div/div[2]/div/div[1]/table/tbody/tr[7]/td[1]/div/a[1]/span")).getText();
        String  expectedBenefit7 = "Ask us anything";
        Assert.assertEquals(actualBenefit7, expectedBenefit7);

        String actualBenefit8 = driver.findElement(By.xpath("html/body/div[1]/div/div/div[2]/div/div[1]/table/tbody/tr[8]/td[1]/div/a[1]/span")).getText();
        String  expectedBenefit8 = "Discounts on Products/Services";
        Assert.assertEquals(actualBenefit8, expectedBenefit8);

        String actualBenefit9 = driver.findElement(By.xpath("html/body/div[1]/div/div/div[2]/div/div[1]/table/tbody/tr[9]/td[1]/div/a[1]/span")).getText();
        String  expectedBenefit9 = "Help millions of people";
        Assert.assertEquals(actualBenefit9, expectedBenefit9);



        driver.findElement(By.xpath("html/body/div[1]/div/div/div[2]/div/div[1]/table/thead/tr/th[3]/div/a")).click();
        driver.findElement(By.xpath("html/body/div[1]/div/div/div/div[2]/div/section/form/div[2]/label/input")).sendKeys("Jcom ten");


        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyyMMddHHmmss");
        Calendar calendar = Calendar.getInstance();
        System.out.println(dateFormat.format(calendar.getTime()));
        String RandomEmail = dateFormat.format(calendar.getTime());
        driver.findElement(By.xpath("html/body/div[1]/div/div/div/div[2]/div/section/form/div[3]/label/input")).sendKeys(RandomEmail + "@gmail.com");

        driver.findElement(By.xpath("html/body/div[1]/div/div/div/div[2]/div/section/form/div[4]/input")).click();




    }
        @Test
        public void test2() {
           /* Click on [Join our community] button
            Look at price in IDF Design leaguel tab
            Look at benefits in IDF Design league tab
            Click [Join us] in IDF Design league tab*/

            driver.navigate().to("https://devuser:pass1234@master.information-architecture.org");
            driver.findElement(By.xpath("/html/body/div[1]/main/header/div[3]/div/nav/div[2]/div/ul/li[2]/a")).click();

            String ActualIdfDesignLeague = driver.findElement(By.xpath("html/body/div[1]/div/div/div[2]/div/div[1]/table/thead/tr/th[4]/div/div/div[1]")).getText();
            String ExpectedIdfDesignLeague = "$150";
            Assert.assertEquals(ActualIdfDesignLeague, ExpectedIdfDesignLeague, "Successful test price is $150");

            //Benefits
            String actualBenefit1 = driver.findElement(By.xpath("html/body/div[1]/div/div/div[2]/div/div[1]/table/tbody/tr[1]/td[1]/div/a[1]/span")).getText();
            String expectedBenefit1 = "Take unlimited number of courses for free";
            Assert.assertEquals(actualBenefit1, expectedBenefit1);

            String actualBenefit2 = driver.findElement(By.xpath("html/body/div[1]/div/div/div[2]/div/div[1]/table/tbody/tr[2]/td[1]/div/a[1]/span")).getText();
            String expectedBenefit2 = "Course Certificates";
            Assert.assertEquals(actualBenefit2, expectedBenefit2);

            String actualBenefit3 = driver.findElement(By.xpath("html/body/div[1]/div/div/div[2]/div/div[1]/table/tbody/tr[3]/td[1]/div/a[1]/span")).getText();
            String expectedBenefit3 = "Local meetings for Learning and Networking";
            Assert.assertEquals(actualBenefit3, expectedBenefit3);

            String actualBenefit4 = driver.findElement(By.xpath("html/body/div[1]/div/div/div[2]/div/div[1]/table/tbody/tr[4]/td[1]/div/a[1]/span")).getText();
            String expectedBenefit4 = "Premium Literature on UX";
            Assert.assertEquals(actualBenefit4, expectedBenefit4);

            String actualBenefit5 = driver.findElement(By.xpath("html/body/div[1]/div/div/div[2]/div/div[1]/table/tbody/tr[5]/td[1]/div/a[1]/span")).getText();
            String expectedBenefit5 = "Career help and jobs";
            Assert.assertEquals(actualBenefit5, expectedBenefit5);

            String actualBenefit6 = driver.findElement(By.xpath("html/body/div[1]/div/div/div[2]/div/div[1]/table/tbody/tr[6]/td[1]/div/a[1]/span")).getText();
            String expectedBenefit6 = "Lifetime IDF email and profile page";
            Assert.assertEquals(actualBenefit6, expectedBenefit6);

            String actualBenefit7 = driver.findElement(By.xpath("html/body/div[1]/div/div/div[2]/div/div[1]/table/tbody/tr[7]/td[1]/div/a[1]/span")).getText();
            String expectedBenefit7 = "Ask us anything";
            Assert.assertEquals(actualBenefit7, expectedBenefit7);

            String actualBenefit8 = driver.findElement(By.xpath("html/body/div[1]/div/div/div[2]/div/div[1]/table/tbody/tr[8]/td[1]/div/a[1]/span")).getText();
            String expectedBenefit8 = "Discounts on Products/Services";
            Assert.assertEquals(actualBenefit8, expectedBenefit8);

            String actualBenefit9 = driver.findElement(By.xpath("html/body/div[1]/div/div/div[2]/div/div[1]/table/tbody/tr[9]/td[1]/div/a[1]/span")).getText();
            String expectedBenefit9 = "Help millions of people";
            Assert.assertEquals(actualBenefit9, expectedBenefit9);

            String actualBenefit10 = driver.findElement(By.xpath("html/body/div[1]/div/div/div[2]/div/div[1]/table/tbody/tr[10]/td[1]/div/a[1]/span")).getText();
            String expectedBenefit10 = "Personal Coach";
            Assert.assertEquals(actualBenefit10, expectedBenefit10);

            //click join
            driver.findElement(By.xpath("html/body/div[1]/div/div/div[2]/div/div[1]/table/thead/tr/th[4]/div/a")).click();

            //name
            driver.findElement(By.xpath("html/body/div[1]/div/div/div/div[2]/div/section/form/div[2]/label/input")).sendKeys("kdjhsl");
            //Random email
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyyMMddHHmmss");
            Calendar calendar = Calendar.getInstance();
            System.out.println(dateFormat.format(calendar.getTime()));
            String RandomEmail = dateFormat.format(calendar.getTime());
            driver.findElement(By.xpath("html/body/div[1]/div/div/div/div[2]/div/section/form/div[3]/label/input")).sendKeys(RandomEmail + "@gmail.com");
            driver.findElement(By.xpath("html/body/div[1]/div/div/div/div[2]/div/section/form/div[4]/input")).click();
        }

            @Test
            public void test3(){

                driver.navigate().to("https://devuser:pass1234@master.information-architecture.org");
                driver.findElement(By.xpath("/html/body/div[1]/main/header/div[3]/div/nav/div[2]/div/ul/li[2]/a")).click();

                driver.findElement(By.cssSelector("a > span")).click();
                driver.findElement(By.cssSelector("#takeUnlimitedNumberOfCoursesForFree > a.close-reveal-modal")).click();

                driver.findElement(By.xpath("//tr[2]/td/div/a/span")).click();
                driver.findElement(By.cssSelector("#courseCompletionCertificates > a.close-reveal-modal")).click();



    }



        @AfterSuite
        public void quiteDriver() throws Exception {
           driver.quit();
        }
}
